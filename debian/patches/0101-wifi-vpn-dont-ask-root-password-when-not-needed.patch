Index: NetworkManager-0.9.10.0/src/settings/nm-settings-connection.c
===================================================================
--- NetworkManager-0.9.10.0.orig/src/settings/nm-settings-connection.c	2015-08-18 11:44:33.311655883 +0200
+++ NetworkManager-0.9.10.0/src/settings/nm-settings-connection.c	2015-08-18 11:44:36.359725786 +0200
@@ -667,7 +667,7 @@
                         NMSettingSecretFlags flags,
                         gpointer user_data)
 {
-	if (flags != NM_SETTING_SECRET_FLAG_AGENT_OWNED)
+	if ( ! (flags & (NM_SETTING_SECRET_FLAG_AGENT_OWNED | NM_SETTING_SECRET_FLAG_NOT_SAVED)))
 		g_hash_table_iter_remove (iter);
 	return TRUE;
 }
Index: NetworkManager-0.9.10.0/src/settings/nm-agent-manager.c
===================================================================
--- NetworkManager-0.9.10.0.orig/src/settings/nm-agent-manager.c	2015-08-18 11:44:33.311655883 +0200
+++ NetworkManager-0.9.10.0/src/settings/nm-agent-manager.c	2015-08-18 16:19:29.137616296 +0200
@@ -1016,6 +1016,42 @@
 	return has_system;
 }
 
+static gboolean
+has_existing_secrets (ConnectionRequest *req)
+{
+	GHashTableIter iter;
+	gpointer key, value;
+	GHashTable *vpn_secrets;
+
+	if ( ! req->existing_secrets)
+		return FALSE;
+	
+	/* iterate over the existing secrets hash */
+	g_hash_table_iter_init(&iter, req->existing_secrets);
+	while (g_hash_table_iter_next(&iter, &key, &value))
+	{
+		/* a VPN entry doesn't always mean we really have secrets */
+		if (strcmp(key, "vpn") == 0)
+		{
+			vpn_secrets = g_hash_table_lookup(value, "secrets");
+			if ( ! vpn_secrets)
+				continue;
+			if (g_hash_table_size(vpn_secrets) > 0)
+				return TRUE;
+		}
+		/* same for 802-11-wireless */
+		else if (strcmp(key, "802-11-wireless") == 0)
+		{
+			if(g_hash_table_size(value) > 0)
+				return TRUE;
+		}
+		else
+			return TRUE;
+	}
+
+	return FALSE;
+}
+
 static void
 get_next_cb (Request *parent)
 {
@@ -1034,7 +1070,7 @@
 	 * unprivileged users.
 	 */
 	if (   (req->flags != NM_SETTINGS_GET_SECRETS_FLAG_NONE)
-	    && (req->existing_secrets || has_system_secrets (req->connection))) {
+	    && (has_existing_secrets(req) || has_system_secrets (req->connection))) {
 		nm_log_dbg (LOGD_AGENTS, "(%p/%s/%s) request has system secrets; checking agent %s for MODIFY",
 		            req, parent->detail, req->setting_name, agent_dbus_owner);
 
